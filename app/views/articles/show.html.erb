
  <div class = "container article-list">
    <div class = "article-list_article-logo">
			<h1>記事詳細</h1>
    </div>
    <% if user_signed_in? %>
            <span class="label label-success">投稿者:<%=link_to user_path(@user.id) do%><%= @user.user_name %><% end %></span>
            <% else %>
            <span class="label label-success">投稿者:<%= @user.user_name %></span>
            <% end %>
            <!-- いいね機能 -->
            <span id=<%= "favorite_#{@article.id}" %> >
              <%= render 'favorites/favorite', article: @article %>
            </span>
            <!-- コメント数表示 -->
            <span class="label label-info">コメント数:<%= @article.article_comments.count %></span>
          <!-- 投稿者のみ編集と削除を許可 -->
          <% if user_signed_in? %>
            <% if  @user.id == current_user.id %>
              <span><%= link_to "編集", edit_article_path(@article), class: "label label-success" %></span>
              <span><%= link_to "削除する", article_path(@article), method: :delete, "data-confirm" => "本当に消しますか？", class: "label label-danger" %></span>
             <% end %>
             <% end%>
<h2><%= @article.title %></h2>
<text><%= @article.body %></text>
    <div id='map' data-lat="<%= @article.latitude %>" data-lon="<%= @article.longitude %>">
    </div>

    <style>
          #map{
        height: 400px;
      }
    </style>
    <!-- 画像スライダー -->
    <ul class="bxslider">
      <% @images.each do |image| %>
          <li>
                <%= attachment_image_tag image, :image %>
          </li>
      <% end %>
    </ul>
      <!-- 記事に対するコメントをする。 -->
      <% if user_signed_in? %>
<% if @article_comment.errors.any? %>
      <div id="error_explanation">
        <h2><%= pluralize(@article_comment.errors.count, "error") %> prohibited this product from being saved:</h2>
        <ul>
          <% @article_comment.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
<% end %>
      <%= form_for [@article, @article_comment] do |f| %>
            <div class = "field">
              <h2>記事へコメント</h2>
            </div>
            <div class= "field row">
              <%= f.text_area :comment, class: "col-xs-12" %>
            </div>
            <div class = "actions row">
              <%= f.submit "コメントする", class: "btn btn-primary col-xs-12" %>
            </div>
      <% end %>
      <% end %>
  </div>

    <!-- 記事に対してのコメントを表示 -->
      <table class="table table-hover table-inverse">
        <tbody>
          <tr>
            <% @article.article_comments.each do |article_comment| %>
              <td>
              <%#= link_to user_path(article_comment.user) do%><%#= attachment_image_tag article_comment.user, :profile_image, :fill, 60, 60, format: 'jpeg', class: "img pull-left profile-img", fallback: "no_image.jpg" %>
              <%= article_comment.user.user_name %>
              </td>
              <td>
                <%= article_comment.comment %>
              </td>
              <!-- コメント主のみ削除可能 -->
              <% if article_comment.user == current_user %>
                <td>
                  <%= link_to "削除する", article_article_comment_path(article_comment.article, article_comment), method: :delete, class: "btn btn-danger pull-right" %>
                </td>
              <% end %>
            <%end%>
          </tr>

        </tbody>
      </table>

<script src="https://maps.googleapis.com/maps/api/js?key=<%=ENV["GOOGLE_MAP_KEY"]%>&callback=initMap" defer></script>
<script>
/*
mapを関数の外で定義(codeAddressでも使うため)
geocoderを用意
*/
const mapElement = document.getElementById('map')
const latitude = parseFloat(mapElement.dataset.lat)
const longitude = parseFloat(mapElement.dataset.lon)
let map
        // google.maps.MarkerでGoogleMap上の指定位置にマーカが立つ
        // google.maps.Markerインスタンスを生成
        // var marker = new google.maps.Marker({
        //   map: map,
        //   position: results[0].geometry.location
        // });

function initMap(){
  map = new google.maps.Map(document.getElementById('map'), {
  center: {lat: latitude, lng: longitude},
  zoom: 8
  });
 // 保存された地図情報からピンをさす

    // google.maps.LatLngインスタンスを生成
    pos = new google.maps.LatLng(
    latitude, //latitude
    longitude //longitude
    );
    default_marker = new google.maps.Marker({
    map: map,
    position: pos,
    icon: {
    url: ' https://maps.google.com/mapfiles/ms/icons/green-dot.png', //アイコンのURL
    scaledSize: new google.maps.Size(40, 40) //サイズ
    }
    });
}
</script>